version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_container
    restart: always
    env_file: .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app_network

  backend:
    build: ./backend
    container_name: flask_api
    restart: always
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./backend:/app
    ports:
      - "5001:5000"
    networks:
      - app_network

  nginx:
    build:
      context: ./frontend         # uses your multi-stage Dockerfile inside ./frontend
      dockerfile: Dockerfile
    container_name: nginx_server
    restart: always
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
