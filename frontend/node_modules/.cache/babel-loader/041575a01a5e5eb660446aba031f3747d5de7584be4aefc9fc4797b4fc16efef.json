{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/amit/deals-project/frontend/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  data,\n  setSelectedCategory\n}) => {\n  _s();\n  const categories = data || {};\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const [selected, setSelected] = useState(\"All\");\n  const toggleCategory = category => {\n    setExpandedCategories(prev => ({\n      [category]: !prev[category] ? true : !prev[category] // Close others when clicking a new one\n    }));\n    setSelected(category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categoryList\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `category ${selected === \"All\" ? \"selected\" : \"\"}`,\n          onClick: () => {\n            setSelected(\"All\");\n            setSelectedCategory({\n              type: \"all\",\n              name: \"All Deals\"\n            });\n            setExpandedCategories({}); // Collapse all categories\n          },\n          children: \"All Deals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), Object.keys(categories).length > 0 ? Object.entries(categories).map(([category, subcategories]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `category ${expandedCategories[category] ? \"expanded\" : \"\"} ${selected === category ? \"selected\" : \"\"}`,\n          onClick: () => {\n            toggleCategory(category);\n            setSelectedCategory({\n              type: \"category\",\n              name: category\n            });\n          },\n          children: [category, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: expandedCategories[category] ? \"▼\" : \"▶\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), expandedCategories[category] && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"subcategoryList\",\n          children: subcategories.map(subcategory => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `subcategory ${selected === subcategory ? \"selected\" : \"\"}`,\n            onClick: () => {\n              setSelected(subcategory);\n              setSelectedCategory({\n                type: \"subcategory\",\n                name: subcategory\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"arrow\",\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 45\n            }, this), \" \", subcategory]\n          }, subcategory, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No categories available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"dmaN1p+g9yBwBhIOmFVAEhKd48o=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sidebar","data","setSelectedCategory","_s","categories","expandedCategories","setExpandedCategories","selected","setSelected","toggleCategory","category","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","name","Object","keys","length","entries","map","subcategories","subcategory","_c","$RefreshReg$"],"sources":["/Users/amit/Desktop/amit/deals-project/frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Sidebar = ({ data, setSelectedCategory }) => {\n    const categories = data || {};\n    const [expandedCategories, setExpandedCategories] = useState({});\n    const [selected, setSelected] = useState(\"All\");\n\n    const toggleCategory = (category) => {\n        setExpandedCategories((prev) => ({\n            [category]: !prev[category] ? true : !prev[category], // Close others when clicking a new one\n        }));\n        setSelected(category);\n    };\n\n    return (\n        <div className=\"category-menu\">\n            <h3>Categories</h3>\n            <ul className=\"categoryList\">\n                {/* \"All Deals\" Option */}\n                <li>\n                    <div\n                        className={`category ${selected === \"All\" ? \"selected\" : \"\"}`}\n                        onClick={() => {\n                            setSelected(\"All\");\n                            setSelectedCategory({ type: \"all\", name: \"All Deals\" });\n                            setExpandedCategories({}); // Collapse all categories\n                        }}\n                    >\n                        All Deals\n                    </div>\n                </li>\n\n                {/* Render Categories */}\n                {Object.keys(categories).length > 0 ? (\n                    Object.entries(categories).map(([category, subcategories]) => (\n                        <li key={category}>\n                            {/* Main Category */}\n                            <div\n                                className={`category ${expandedCategories[category] ? \"expanded\" : \"\"} ${selected === category ? \"selected\" : \"\"}`}\n                                onClick={() => {\n                                    toggleCategory(category);\n                                    setSelectedCategory({ type: \"category\", name: category });\n                                }}\n                            >\n                                {category}\n                                <span>{expandedCategories[category] ? \"▼\" : \"▶\"}</span>\n                            </div>\n\n                            {/* Subcategories */}\n                            {expandedCategories[category] && (\n                                <ul className=\"subcategoryList\">\n                                    {subcategories.map((subcategory) => (\n                                        <li\n                                            key={subcategory}\n                                            className={`subcategory ${selected === subcategory ? \"selected\" : \"\"}`}\n                                            onClick={() => {\n                                                setSelected(subcategory);\n                                                setSelectedCategory({ type: \"subcategory\", name: subcategory });\n                                            }}\n                                        >\n                                            <span className=\"arrow\">▶</span> {subcategory}\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </li>\n                    ))\n                ) : (\n                    <li>No categories available</li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Sidebar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,UAAU,GAAGH,IAAI,IAAI,CAAC,CAAC;EAC7B,MAAM,CAACI,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMY,cAAc,GAAIC,QAAQ,IAAK;IACjCJ,qBAAqB,CAAEK,IAAI,KAAM;MAC7B,CAACD,QAAQ,GAAG,CAACC,IAAI,CAACD,QAAQ,CAAC,GAAG,IAAI,GAAG,CAACC,IAAI,CAACD,QAAQ,CAAC,CAAE;IAC1D,CAAC,CAAC,CAAC;IACHF,WAAW,CAACE,QAAQ,CAAC;EACzB,CAAC;EAED,oBACIX,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1Bd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAIa,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAExBd,OAAA;QAAAc,QAAA,eACId,OAAA;UACIa,SAAS,EAAE,YAAYL,QAAQ,KAAK,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;UAC9DW,OAAO,EAAEA,CAAA,KAAM;YACXV,WAAW,CAAC,KAAK,CAAC;YAClBN,mBAAmB,CAAC;cAAEiB,IAAI,EAAE,KAAK;cAAEC,IAAI,EAAE;YAAY,CAAC,CAAC;YACvDd,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/B,CAAE;UAAAO,QAAA,EACL;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGJI,MAAM,CAACC,IAAI,CAAClB,UAAU,CAAC,CAACmB,MAAM,GAAG,CAAC,GAC/BF,MAAM,CAACG,OAAO,CAACpB,UAAU,CAAC,CAACqB,GAAG,CAAC,CAAC,CAACf,QAAQ,EAAEgB,aAAa,CAAC,kBACrD3B,OAAA;QAAAc,QAAA,gBAEId,OAAA;UACIa,SAAS,EAAE,YAAYP,kBAAkB,CAACK,QAAQ,CAAC,GAAG,UAAU,GAAG,EAAE,IAAIH,QAAQ,KAAKG,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;UACnHQ,OAAO,EAAEA,CAAA,KAAM;YACXT,cAAc,CAACC,QAAQ,CAAC;YACxBR,mBAAmB,CAAC;cAAEiB,IAAI,EAAE,UAAU;cAAEC,IAAI,EAAEV;YAAS,CAAC,CAAC;UAC7D,CAAE;UAAAG,QAAA,GAEDH,QAAQ,eACTX,OAAA;YAAAc,QAAA,EAAOR,kBAAkB,CAACK,QAAQ,CAAC,GAAG,GAAG,GAAG;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,EAGLZ,kBAAkB,CAACK,QAAQ,CAAC,iBACzBX,OAAA;UAAIa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC1Ba,aAAa,CAACD,GAAG,CAAEE,WAAW,iBAC3B5B,OAAA;YAEIa,SAAS,EAAE,eAAeL,QAAQ,KAAKoB,WAAW,GAAG,UAAU,GAAG,EAAE,EAAG;YACvET,OAAO,EAAEA,CAAA,KAAM;cACXV,WAAW,CAACmB,WAAW,CAAC;cACxBzB,mBAAmB,CAAC;gBAAEiB,IAAI,EAAE,aAAa;gBAAEC,IAAI,EAAEO;cAAY,CAAC,CAAC;YACnE,CAAE;YAAAd,QAAA,gBAEFd,OAAA;cAAMa,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACU,WAAW;UAAA,GAPxCA,WAAW;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQhB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAA,GA7BIP,QAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8Bb,CACP,CAAC,gBAEFlB,OAAA;QAAAc,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAClC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CAvEIH,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAyEb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}