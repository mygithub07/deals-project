{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/amit/deals-project/frontend/src/components/StoreFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchStores } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreFilter = ({\n  setSelectedStore\n}) => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [selected, setSelected] = useState(\"All\");\n  useEffect(() => {\n    const getStores = async () => {\n      try {\n        const response = await fetchStores();\n        if (Array.isArray(response)) {\n          setStores(response);\n        } else {\n          console.error(\"Invalid store data format:\", response);\n        }\n      } catch (error) {\n        console.error(\"Error fetching stores:\", error);\n      }\n    };\n    getStores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"store-menu-title\",\n      children: \"Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"store-menu-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `store-item ${selected === \"All\" ? \"selected\" : \"\"}`,\n          onClick: () => {\n            setSelected(\"All\");\n            setSelectedStore({\n              type: \"all\",\n              name: \"All Stores\"\n            });\n          },\n          children: \"All Stores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), stores.length > 0 ? stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `store-item ${selected === store ? \"selected\" : \"\"}`,\n          onClick: () => {\n            setSelected(store);\n            setSelectedStore({\n              type: \"store\",\n              name: store\n            });\n          },\n          children: store\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)\n      }, store, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"store-item no-stores\",\n        children: \"No stores available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreFilter, \"qEwoP0P8OkQCMR02/YDeUXc9Tr4=\");\n_c = StoreFilter;\nexport default StoreFilter;\nvar _c;\n$RefreshReg$(_c, \"StoreFilter\");","map":{"version":3,"names":["React","useState","useEffect","fetchStores","jsxDEV","_jsxDEV","StoreFilter","setSelectedStore","_s","stores","setStores","selected","setSelected","getStores","response","Array","isArray","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","name","length","map","store","_c","$RefreshReg$"],"sources":["/Users/amit/Desktop/amit/deals-project/frontend/src/components/StoreFilter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchStores } from \"./api\";\n\n\nconst StoreFilter = ({ setSelectedStore }) => {\n    const [stores, setStores] = useState([]);\n    const [selected, setSelected] = useState(\"All\");\n\n    useEffect(() => {\n        const getStores = async () => {\n            try {\n                const response = await fetchStores();\n                if (Array.isArray(response)) {\n                    setStores(response);\n                } else {\n                    console.error(\"Invalid store data format:\", response);\n                }\n            } catch (error) {\n                console.error(\"Error fetching stores:\", error);\n            }\n        };\n        getStores();\n    }, []);\n\n    return (\n        <div className=\"store-menu\">\n            <h3 className=\"store-menu-title\">Stores</h3>\n            <ul className=\"store-menu-list\">\n                <li>\n                    <div\n                        className={`store-item ${selected === \"All\" ? \"selected\" : \"\"}`}\n                        onClick={() => {\n                            setSelected(\"All\");\n                            setSelectedStore({ type: \"all\", name: \"All Stores\" });\n                        }}\n                    >\n                        All Stores\n                    </div>\n                </li>\n                {stores.length > 0 ? (\n                    stores.map((store) => (\n                        <li key={store}>\n                            <div\n                                className={`store-item ${selected === store ? \"selected\" : \"\"}`}\n                                onClick={() => {\n                                    setSelected(store);\n                                    setSelectedStore({ type: \"store\", name: store });\n                                }}\n                            >\n                                {store}\n                            </div>\n                        </li>\n                    ))\n                ) : (\n                    <li className=\"store-item no-stores\">No stores available</li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default StoreFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}