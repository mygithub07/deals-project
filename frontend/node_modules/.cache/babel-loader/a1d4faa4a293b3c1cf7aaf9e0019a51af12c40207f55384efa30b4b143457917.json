{"ast":null,"code":"const API_BASE_URL=\"http://localhost:5001\";// Flask server URL\nexport const fetchDeals=async()=>{try{const response=await fetch(`${API_BASE_URL}/deals`);if(!response.ok)throw new Error(\"Failed to fetch deals\");return await response.json();}catch(error){console.error(\"Error fetching deals:\",error);return[];}};export const fetchCategories=async()=>{try{const response=await fetch(`${API_BASE_URL}/categories`);if(!response.ok)throw new Error(\"Failed to fetch categories\");return await response.json();}catch(error){console.error(\"Error fetching categories:\",error);return{};}};export const fetchStores=async()=>{try{const response=await fetch(`${API_BASE_URL}/stores`);if(!response.ok)throw new Error(\"Failed to fetch stores\");return await response.json();}catch(error){console.error(\"Error fetching stores:\",error);return[];}};export const fetchTypes=async()=>{try{const response=await fetch(`${API_BASE_URL}/types`);if(!response.ok)throw new Error(\"Failed to fetch stores\");return await response.json();}catch(error){console.error(\"Error fetching stores:\",error);return[];}};","map":{"version":3,"names":["API_BASE_URL","fetchDeals","response","fetch","ok","Error","json","error","console","fetchCategories","fetchStores","fetchTypes"],"sources":["/Users/amit/Desktop/amit/deals-project/frontend/src/components/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:5001\"; // Flask server URL\n\nexport const fetchDeals = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/deals`);  \n        if (!response.ok) throw new Error(\"Failed to fetch deals\");\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching deals:\", error);\n        return [];\n    }\n};\n\nexport const fetchCategories = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/categories`);  \n        if (!response.ok) throw new Error(\"Failed to fetch categories\");\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        return {};\n    }\n};\n\nexport const fetchStores = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/stores`);\n        if (!response.ok) throw new Error(\"Failed to fetch stores\");\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching stores:\", error);\n        return [];\n    }\n};\n\nexport const fetchTypes = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/types`);\n        if (!response.ok) throw new Error(\"Failed to fetch stores\");\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching stores:\", error);\n        return [];\n    }\n};\n\n"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,uBAAuB,CAAE;AAE9C,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,QAAQ,CAAC,CACrD,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1D,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,EAAE,CACb,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACA,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,aAAa,CAAC,CAC1D,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/D,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,CAAC,CAAC,CACb,CACJ,CAAC,CAED,MAAO,MAAM,CAAAG,WAAW,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACA,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC,CACtD,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3D,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,EAAE,CACb,CACJ,CAAC,CAED,MAAO,MAAM,CAAAI,UAAU,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,QAAQ,CAAC,CACrD,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3D,MAAO,MAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,EAAE,CACb,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}