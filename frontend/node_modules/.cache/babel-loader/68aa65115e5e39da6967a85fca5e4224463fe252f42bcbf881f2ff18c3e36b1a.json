{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{fetchStores}from\"./api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StoreFilter=_ref=>{let{setSelectedStore}=_ref;const[stores,setStores]=useState([]);const[selected,setSelected]=useState(\"All\");useEffect(()=>{const getStores=async()=>{try{const response=await fetchStores();if(Array.isArray(response)){setStores(response);}else{console.error(\"Invalid store data format:\",response);}}catch(error){console.error(\"Error fetching stores:\",error);}};getStores();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"store-menu\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"store-menu-title\",children:\"Stores\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"store-menu-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"div\",{className:`store-item ${selected===\"All\"?\"selected\":\"\"}`,onClick:()=>{setSelected(\"All\");setSelectedStore({type:\"all\",name:\"All Stores\"});},children:\"All Stores\"})}),stores.length>0?stores.map(store=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"div\",{className:`store-item ${selected===store?\"selected\":\"\"}`,onClick:()=>{setSelected(store);setSelectedStore({type:\"store\",name:store});},children:store})},store)):/*#__PURE__*/_jsx(\"li\",{className:\"store-item no-stores\",children:\"No stores available\"})]})]});};export default StoreFilter;","map":{"version":3,"names":["React","useState","useEffect","fetchStores","jsx","_jsx","jsxs","_jsxs","StoreFilter","_ref","setSelectedStore","stores","setStores","selected","setSelected","getStores","response","Array","isArray","console","error","className","children","onClick","type","name","length","map","store"],"sources":["/Users/amit/Desktop/amit/deals-project/frontend/src/components/StoreFilter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchStores } from \"./api\";\n\n\nconst StoreFilter = ({ setSelectedStore }) => {\n    const [stores, setStores] = useState([]);\n    const [selected, setSelected] = useState(\"All\");\n\n    useEffect(() => {\n        const getStores = async () => {\n            try {\n                const response = await fetchStores();\n                if (Array.isArray(response)) {\n                    setStores(response);\n                } else {\n                    console.error(\"Invalid store data format:\", response);\n                }\n            } catch (error) {\n                console.error(\"Error fetching stores:\", error);\n            }\n        };\n        getStores();\n    }, []);\n\n    return (\n        <div className=\"store-menu\">\n            <h3 className=\"store-menu-title\">Stores</h3>\n            <ul className=\"store-menu-list\">\n                <li>\n                    <div\n                        className={`store-item ${selected === \"All\" ? \"selected\" : \"\"}`}\n                        onClick={() => {\n                            setSelected(\"All\");\n                            setSelectedStore({ type: \"all\", name: \"All Stores\" });\n                        }}\n                    >\n                        All Stores\n                    </div>\n                </li>\n                {stores.length > 0 ? (\n                    stores.map((store) => (\n                        <li key={store}>\n                            <div\n                                className={`store-item ${selected === store ? \"selected\" : \"\"}`}\n                                onClick={() => {\n                                    setSelected(store);\n                                    setSelectedStore({ type: \"store\", name: store });\n                                }}\n                            >\n                                {store}\n                            </div>\n                        </li>\n                    ))\n                ) : (\n                    <li className=\"store-item no-stores\">No stores available</li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default StoreFilter;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGpC,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAA0B,IAAzB,CAAEC,gBAAiB,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAa,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,WAAW,CAAC,CAAC,CACpC,GAAIc,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAE,CACzBJ,SAAS,CAACI,QAAQ,CAAC,CACvB,CAAC,IAAM,CACHG,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEJ,QAAQ,CAAC,CACzD,CACJ,CAAE,MAAOI,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAClD,CACJ,CAAC,CACDL,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIR,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBjB,IAAA,OAAIgB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,QAAM,CAAI,CAAC,cAC5Cf,KAAA,OAAIc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC3BjB,IAAA,OAAAiB,QAAA,cACIjB,IAAA,QACIgB,SAAS,CAAE,cAAcR,QAAQ,GAAK,KAAK,CAAG,UAAU,CAAG,EAAE,EAAG,CAChEU,OAAO,CAAEA,CAAA,GAAM,CACXT,WAAW,CAAC,KAAK,CAAC,CAClBJ,gBAAgB,CAAC,CAAEc,IAAI,CAAE,KAAK,CAAEC,IAAI,CAAE,YAAa,CAAC,CAAC,CACzD,CAAE,CAAAH,QAAA,CACL,YAED,CAAK,CAAC,CACN,CAAC,CACJX,MAAM,CAACe,MAAM,CAAG,CAAC,CACdf,MAAM,CAACgB,GAAG,CAAEC,KAAK,eACbvB,IAAA,OAAAiB,QAAA,cACIjB,IAAA,QACIgB,SAAS,CAAE,cAAcR,QAAQ,GAAKe,KAAK,CAAG,UAAU,CAAG,EAAE,EAAG,CAChEL,OAAO,CAAEA,CAAA,GAAM,CACXT,WAAW,CAACc,KAAK,CAAC,CAClBlB,gBAAgB,CAAC,CAAEc,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAEG,KAAM,CAAC,CAAC,CACpD,CAAE,CAAAN,QAAA,CAEDM,KAAK,CACL,CAAC,EATDA,KAUL,CACP,CAAC,cAEFvB,IAAA,OAAIgB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,qBAAmB,CAAI,CAC/D,EACD,CAAC,EACJ,CAAC,CAEd,CAAC,CAED,cAAe,CAAAd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}